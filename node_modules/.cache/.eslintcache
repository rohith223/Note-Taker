[{"C:\\Users\\91824\\Desktop\\frontend\\src\\index.js":"1","C:\\Users\\91824\\Desktop\\frontend\\src\\components\\Nopage.jsx":"2","C:\\Users\\91824\\Desktop\\frontend\\src\\components\\Home.jsx":"3","C:\\Users\\91824\\Desktop\\frontend\\src\\components\\Login.jsx":"4","C:\\Users\\91824\\Desktop\\frontend\\src\\components\\Popup.jsx":"5","C:\\Users\\91824\\Desktop\\frontend\\src\\components\\Register.jsx":"6","C:\\Users\\91824\\Desktop\\frontend\\src\\Service\\LoginSignupService.js":"7","C:\\Users\\91824\\Desktop\\frontend\\src\\Validation\\yupschema.js":"8","C:\\Users\\91824\\Desktop\\frontend\\src\\env.js":"9","C:\\Users\\91824\\Desktop\\frontend\\src\\Service\\SecurityService.js":"10"},{"size":717,"mtime":1695478010509,"results":"11","hashOfConfig":"12"},{"size":92,"mtime":1695438565826,"results":"13","hashOfConfig":"12"},{"size":5550,"mtime":1695474816063,"results":"14","hashOfConfig":"12"},{"size":2520,"mtime":1695475787237,"results":"15","hashOfConfig":"12"},{"size":1553,"mtime":1695473915487,"results":"16","hashOfConfig":"12"},{"size":3648,"mtime":1695469889184,"results":"17","hashOfConfig":"12"},{"size":897,"mtime":1695465212876,"results":"18","hashOfConfig":"12"},{"size":758,"mtime":1695470271042,"results":"19","hashOfConfig":"12"},{"size":75,"mtime":1695472029877,"results":"20","hashOfConfig":"12"},{"size":1388,"mtime":1695474874106,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fpmypk",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"C:\\Users\\91824\\Desktop\\frontend\\src\\index.js",[],[],"C:\\Users\\91824\\Desktop\\frontend\\src\\components\\Nopage.jsx",[],[],[],"C:\\Users\\91824\\Desktop\\frontend\\src\\components\\Home.jsx",["58","59"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Notemaker.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { CheckLoginComponent } from '../Service/SecurityService';\r\nimport Popup from './Popup'; // Import the Popup component\r\nimport { env } from '../env';\r\n// ... (existing imports)\r\n\r\nconst NoteMaker = () => {\r\n  const [dataFromBackend, setDataFromBackend] = useState([]);\r\n  const [newCard, setNewCard] = useState({ title: '', note: '', data: '' });\r\n  const [categoryFilter, setCategoryFilter] = useState('');\r\n  const [titleFilter, setTitleFilter] = useState('');\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [noteId, setNoteId] = useState(0);\r\n  const [editedIndex, setEditedIndex] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      let email =sessionStorage.getItem(\"email\")\r\n      const response = await axios.get(`http://localhost:5000/notes/getNoteByEmail/${email}`);\r\n     \r\n      if(response.status === 400)\r\n      {\r\n        setDataFromBackend([])\r\n      }\r\n      else{\r\n        setDataFromBackend(response.data)\r\n      }\r\n      // const { data } = response;\r\n      // setDataFromBackend(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data from the backend:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setNewCard({\r\n      ...newCard,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleAddCard =async () => {\r\n    let createNote = await axios.post(`${env.REACT_APP_API}/notes/createNote`,{\r\n      note:newCard.note,\r\n      title:newCard.title,\r\n      category:newCard.data,\r\n      userEmail:sessionStorage.getItem(\"email\")\r\n  })\r\n  fetchData()\r\n    // const newData = [...dataFromBackend, newCard];\r\n    // setDataFromBackend(newData);\r\n    setNewCard({ title: '', note: '', data: '' });\r\n  };\r\n\r\n  const handleEditCard = (note_id,index) => {\r\n    setNoteId(note_id);\r\n    setEditedIndex(index);\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const handleSaveCard = (editedCard) => {\r\n    const newData = [...dataFromBackend];\r\n    newData[editedIndex] = editedCard;\r\n    setDataFromBackend(newData);\r\n    setShowPopup(false);\r\n  };\r\n\r\n  const handleDeleteCard = async(id,index) => {\r\n    let deleteCard = await axios.post(`${env.REACT_APP_API}/notes/deleteNote`,{id})\r\n    fetchData()\r\n    const newData = [...dataFromBackend];\r\n    newData.splice(index, 1);\r\n    setDataFromBackend(newData);\r\n  };\r\n\r\n  const handleCategoryFilterChange = (event) => {\r\n    setCategoryFilter(event.target.value);\r\n  };\r\n\r\n  const handleTitleFilterChange = (event) => {\r\n    setTitleFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n<CheckLoginComponent/>\r\n      <h1>Note Maker</h1>\r\n      {/* Title Filter Input */}\r\n      <div className=\"filter-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter by Title\"\r\n          value={titleFilter}\r\n          onChange={handleTitleFilterChange}\r\n        />\r\n      </div>\r\n\r\n      {/* Category Filter Input */}\r\n      <div className=\"filter-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter by Category\"\r\n          value={categoryFilter}\r\n          onChange={handleCategoryFilterChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"card-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          name=\"title\"\r\n          value={newCard.title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          placeholder=\"Note\"\r\n          name=\"note\"\r\n          value={newCard.note}\r\n          onChange={handleInputChange}\r\n        ></textarea>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Category\"\r\n          name=\"data\"\r\n          value={newCard.data}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddCard}>Add Card</button>\r\n      </div>\r\n\r\n      <div className=\"card-list\">\r\n        {dataFromBackend.length !== 0? dataFromBackend\r\n          .filter((item) =>\r\n            (categoryFilter ? item.category.toLowerCase().includes(categoryFilter.toLowerCase()) : true) &&\r\n            (titleFilter ? item.title.toLowerCase().includes(titleFilter.toLowerCase()) : true)\r\n          )\r\n          .map((item, index) => (\r\n            <div key={index} className=\"card\">\r\n              <h2>{item.title}</h2>\r\n              <p>Note: {item.note}</p>\r\n              <p>Category: {item.category}</p>\r\n              <div className=\"card-icons\">\r\n                <span>\r\n                  <FontAwesomeIcon\r\n                    icon={faEdit}\r\n                    onClick={() => handleEditCard(item.id,index)}\r\n                    className=\"edit-icon\"\r\n                  />\r\n                </span>\r\n                <span>\r\n                  <FontAwesomeIcon\r\n                    icon={faTrash}\r\n                    onClick={() => handleDeleteCard(item.id,index)}\r\n                    className=\"delete-icon\"\r\n                  />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )):\"\"}\r\n      </div>\r\n\r\n      {showPopup && (\r\n        <Popup\r\n          noteId={noteId}\r\n          fetchData={fetchData}\r\n          cardData={dataFromBackend[editedIndex]}\r\n          onSave={handleSaveCard}\r\n          onClose={() => setShowPopup(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteMaker;\r\n","C:\\Users\\91824\\Desktop\\frontend\\src\\components\\Login.jsx",["60"],[],"C:\\Users\\91824\\Desktop\\frontend\\src\\components\\Popup.jsx",["61"],[],"import React, { useState } from 'react';\r\nimport './Popup.css';\r\nimport { env } from '../env';\r\nimport axios from 'axios';\r\n\r\nconst Popup = ({noteId,fetchData, cardData, onSave, onClose }) => {\r\n  const [editedCard, setEditedCard] = useState(cardData);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setEditedCard({\r\n      ...editedCard,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    // onSave(editedCard);\r\n    let editNote = await axios.put(`${env.REACT_APP_API}/notes/updateNote`,{\r\n        note:editedCard.note,\r\n        title:editedCard.title,\r\n        category:editedCard.category,\r\n        note_id:noteId\r\n    })\r\n    fetchData()\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-inner\">\r\n        <h2>Edit Card</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          name=\"title\"\r\n          value={editedCard.title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          placeholder=\"Note\"\r\n          name=\"note\"\r\n          value={editedCard.note}\r\n          onChange={handleInputChange}\r\n        ></textarea>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Category\"\r\n          name=\"category\"\r\n          value={editedCard.category}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleSave}>Save</button>\r\n        <button onClick={onClose}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","C:\\Users\\91824\\Desktop\\frontend\\src\\components\\Register.jsx",["62","63"],[],"import React, { useState } from \"react\";\r\nimport \"./LoginSignup.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useFormik } from \"formik\";\r\nimport { sign_upSchema } from \"../Validation/yupschema\";\r\nimport { signupUser } from \"../Service/LoginSignupService\";\r\nconst Signup = () => {\r\n  const navigate = useNavigate();\r\n  const [showIcon, setShowIcon] = useState(false);\r\n  const [showIcon1, setShowIcon1] = useState(false);\r\n\r\n  const onSubmit = async (values, actions) => {\r\n    console.log(values);\r\n\r\n    let signup = await signupUser(values);\r\n    console.log(\"signup\");\r\n    if (signup.status === 200) {\r\n      toast.success(signup.data.message, {\r\n        autoClose: 2000,\r\n      });\r\n      setTimeout(() => {\r\n        actions.resetForm();\r\n        navigate(\"/\");\r\n      }, 3000);\r\n    } else {\r\n      console.log(signup);\r\n      toast.error(signup.data.message, {\r\n        autoClose: 2000,\r\n      });\r\n    }\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      cPassword: \"\",\r\n    },\r\n    validationSchema: sign_upSchema,\r\n    onSubmit: onSubmit,\r\n  });\r\n  return (\r\n    <div className=\"main\">\r\n    <div className=\"form-container\">\r\n      <h2>Sign Up</h2>\r\n      <form\r\n        onSubmit={formik.handleSubmit}\r\n        className=\"form  Signup\"\r\n        autoComplete=\"off\"\r\n      >\r\n        <label>Full Name </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"signup__input\"\r\n          id=\"fName\"\r\n          value={formik.values.fName}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          placeholder=\"Full Name\"\r\n        />\r\n        {formik.errors.fName && formik.touched.fName && (\r\n          <div className=\"error\">{formik.errors.fName}</div>\r\n        )}{\" \"}\r\n        \r\n        <label>Email</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"signup__input\"\r\n          id=\"email\"\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          placeholder=\"Email\"\r\n        />\r\n        {formik.errors.email && formik.touched.email && (\r\n          <div className=\"error\">{formik.errors.email}</div>\r\n        )}\r\n        <label>Password</label>\r\n        <input\r\n          type={showIcon ? \"text\" : \"password\"}\r\n          className=\"signup__input\"\r\n          id=\"password\"\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          placeholder=\"Password\"\r\n        />\r\n        {formik.errors.password && formik.touched.password && (\r\n          <div className=\"error password-error\">{formik.errors.password}</div>\r\n        )}\r\n        <label>Confirm Password</label>\r\n        <input\r\n          type={showIcon1 ? \"text\" : \"password\"}\r\n          className=\"signup__input\"\r\n          id=\"cPassword\"\r\n          value={formik.values.cPassword}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        {formik.errors.cPassword && formik.touched.cPassword && (\r\n          <div className=\"error\">{formik.errors.cPassword}</div>\r\n        )}\r\n        <button\r\n          className=\"button signup__submit\"\r\n          disabled={formik.isSubmitting}\r\n          type=\"submit\"\r\n        >\r\n          Sign Up\r\n        </button>\r\n        <p>\r\n          Already have an account?<Link to=\"/\">Login</Link>\r\n        </p>\r\n      </form>\r\n      <ToastContainer />\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;","C:\\Users\\91824\\Desktop\\frontend\\src\\Service\\LoginSignupService.js",[],[],"C:\\Users\\91824\\Desktop\\frontend\\src\\Validation\\yupschema.js",["64","65","66"],[],"import * as yup from \"yup\";\r\n\r\nexport const loginSchema = yup.object().shape({\r\n  email: yup.string().email(\"Please enter a valid email\").required(\"*Required\"),\r\n  password: yup.string().required(\"*Required\"),\r\n});\r\n\r\nexport const sign_upSchema = yup.object().shape({\r\n  fName: yup.string().required(\"*Required\"),\r\n  email: yup.string().email(\"Please enter a valid email\").required(\"*Required\"),\r\n  password: yup\r\n    .string()\r\n     .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{6,})/,\r\n        \"Min 6 char,At least 1 number,symbol,small case,large case\"\r\n      )\r\n    .required(\"*Required\"),\r\n  cPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Password do not match\")\r\n    .required(\"*Required\"),\r\n});","C:\\Users\\91824\\Desktop\\frontend\\src\\env.js",[],[],"C:\\Users\\91824\\Desktop\\frontend\\src\\Service\\SecurityService.js",["67","68"],[],"import axios from \"axios\";\r\nimport { env } from \"../env\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const CheckLoginComponent = () => {\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    (async () => {\r\n      let token = sessionStorage.getItem(\"token\");\r\n      try {\r\n        if (token) {\r\n          let checkData = await axios\r\n            .get(`${env.REACT_APP_API}/users/validate`, {\r\n              headers: {\r\n                authorization: `Bearer ${token}`,\r\n              },\r\n            })\r\n            .then((res) => {\r\n              if (res.status !== 200) {\r\n                console.log(res);\r\n                toast.error(res.data.message, {\r\n                  autoClose: 2000,\r\n                });\r\n                setTimeout(() => {\r\n                  navigate(\"/\");\r\n                }, 3000);\r\n              }\r\n              // return res;\r\n            })\r\n            .catch((error) => {\r\n              toast.error(\"Login to access\", {\r\n                autoClose: 2000,\r\n              });\r\n              setTimeout(() => {\r\n                navigate(\"/\");\r\n              }, 3000);\r\n            });\r\n\r\n          // return checkData;\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      } catch (error) {\r\n        navigate(\"/\");\r\n      }\r\n    })();\r\n  }, []);\r\n};",{"ruleId":"69","severity":1,"message":"70","line":53,"column":9,"nodeType":"71","messageId":"72","endLine":53,"endColumn":19},{"ruleId":"69","severity":1,"message":"73","line":79,"column":9,"nodeType":"71","messageId":"72","endLine":79,"endColumn":19},{"ruleId":"69","severity":1,"message":"74","line":11,"column":20,"nodeType":"71","messageId":"72","endLine":11,"endColumn":31},{"ruleId":"69","severity":1,"message":"75","line":19,"column":9,"nodeType":"71","messageId":"72","endLine":19,"endColumn":17},{"ruleId":"69","severity":1,"message":"74","line":10,"column":20,"nodeType":"71","messageId":"72","endLine":10,"endColumn":31},{"ruleId":"69","severity":1,"message":"76","line":11,"column":21,"nodeType":"71","messageId":"72","endLine":11,"endColumn":33},{"ruleId":"77","severity":1,"message":"78","line":14,"column":53,"nodeType":"79","messageId":"80","endLine":14,"endColumn":54,"suggestions":"81"},{"ruleId":"77","severity":1,"message":"82","line":14,"column":56,"nodeType":"79","messageId":"80","endLine":14,"endColumn":57,"suggestions":"83"},{"ruleId":"77","severity":1,"message":"84","line":14,"column":59,"nodeType":"79","messageId":"80","endLine":14,"endColumn":60,"suggestions":"85"},{"ruleId":"69","severity":1,"message":"86","line":14,"column":15,"nodeType":"71","messageId":"72","endLine":14,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":49,"column":6,"nodeType":"89","endLine":49,"endColumn":8,"suggestions":"90"},"no-unused-vars","'createNote' is assigned a value but never used.","Identifier","unusedVar","'deleteCard' is assigned a value but never used.","'setShowIcon' is assigned a value but never used.","'editNote' is assigned a value but never used.","'setShowIcon1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["91","92"],"Unnecessary escape character: \\^.",["93","94"],"Unnecessary escape character: \\*.",["95","96"],"'checkData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["97"],{"messageId":"98","fix":"99","desc":"100"},{"messageId":"101","fix":"102","desc":"103"},{"messageId":"98","fix":"104","desc":"100"},{"messageId":"101","fix":"105","desc":"103"},{"messageId":"98","fix":"106","desc":"100"},{"messageId":"101","fix":"107","desc":"103"},{"desc":"108","fix":"109"},"removeEscape",{"range":"110","text":"111"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"112","text":"113"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"114","text":"111"},{"range":"115","text":"113"},{"range":"116","text":"111"},{"range":"117","text":"113"},"Update the dependencies array to be: [navigate]",{"range":"118","text":"119"},[497,498],"",[497,497],"\\",[500,501],[500,500],[503,504],[503,503],[1380,1382],"[navigate]"]